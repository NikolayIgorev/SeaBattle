using System;

namespace SeaBattle
{
    class Редактор : Море
    {
        static int[] длиннаКораблей = { 4, 3, 3, 2, 2, 2, 1, 1, 1, 1 };
        static Random random = new Random();

        public Редактор()
            : base() { }

        public bool ПоставитьРовно()
        {
            Сброс();
            ПоставитьКорабль(0,
                new Точка[]
                {
                    new Точка(1, 1),
                    new Точка(2, 1),
                    new Точка(3, 1),
                    new Точка(4, 1),
                });

            ПоставитьКорабль(1,
                new Точка[]
                {
                    new Точка(1, 3),
                    new Точка(2, 3),
                    new Точка(3, 3),
                });

            ПоставитьКорабль(2,
                new Точка[]
                {
                    new Точка(5, 3),
                    new Точка(6, 3),
                    new Точка(7, 3),
                });

            ПоставитьКорабль(3,
                new Точка[]
                {
                    new Точка(1, 5),
                    new Точка(2, 5),
                });

            ПоставитьКорабль(4,
                new Точка[]
                {
                    new Точка(4, 5),
                    new Точка(5, 5),
                });

            ПоставитьКорабль(5,
                new Точка[]
                {
                    new Точка(7, 5),
                    new Точка(8, 5),
                });

            ПоставитьКорабль(6,
                new Точка[]
                {
                    new Точка(1, 7),
                });

            ПоставитьКорабль(7,
                new Точка[]
                {
                    new Точка(3, 7),
                });

            ПоставитьКорабль(8,
                new Точка[]
                {
                    new Точка(5, 7),
                });

            ПоставитьКорабль(9,
                new Точка[]
                {
                    new Точка(7, 7),
                });

            return true;
        }

        public bool ПоставитьСлучайно(int номер)
        {
            int длинна = длиннаКораблей[номер];
            Точка нос;
            Точка шаг;
            if (random.Next(2) == 0) // горизонтально
            {
                нос = new Точка(random.Next(размерМоря.x - длинна + 1), random.Next(размерМоря.y));
                шаг = new Точка(1, 0);
            }
            else
            {
                нос = new Точка(random.Next(размерМоря.x), random.Next(размерМоря.y - длинна + 1));
                шаг = new Точка(0, 1);
            }
            Точка[] палуба = new Точка[длинна];
            for (int j = 0; j < длинна; j++)
            {
                палуба[j] = new Точка(нос.x + j * шаг.x, нос.y + j * шаг.y);
                ОчиститьОблисть(палуба[j]);
            }
            ПоставитьКорабль(номер, палуба);
            return true;
        }

        public void Сброс()
        {
            for (int x = 0; x < размерМоря.x; x++)
                for (int y = 0; y < размерМоря.y; y++)
                {
                    картаКораблей[x, y] = -1;
                    картаПопаданий[x, y] = Статус.неизвестно;
                    showFight(new Точка(x, y), Статус.неизвестно);
                    showShip(new Точка(x, y), -1);
                }
            for (int k = 0; k < всегоКораблей; k++)
                корабль[k] = null;

            создано = 0;
            убито = 0;
        }

        public bool ПоставитьПоТочкам(Точка[] палуба)
        {
            int длинна = палуба.Length;
            int номер = НайтиНомер(длинна);
            if (номер < 0) return false;
            Точка лв = палуба[0];
            Точка пн = палуба[0];
            for(int j = 1; j < длинна; j++)
            {
                лв.x = Math.Min(лв.x, палуба[j].x);
                лв.y = Math.Min(лв.y, палуба[j].y);
                пн.x = Math.Max(пн.x, палуба[j].x);
                пн.y = Math.Max(пн.y, палуба[j].y);
            }
            if (лв.x == пн.x) // вертикально
            {
                if (пн.y - лв.y + 1 != длинна)
                    return false;
            }
            else
            if (лв.y == пн.y) // горизонталь
            {
                if (пн.x - лв.x + 1 != длинна)
                    return false;
            }
            else
                return false;
            for (int j = 0; j < длинна; j++)
                ОчиститьОблисть(палуба[j]);
            ПоставитьКорабль(номер, палуба);
            return true;
        }

        int НайтиНомер(int динна) //
        {
            for (int j = 0; j < длиннаКораблей.Length; j++)
                if (динна == длиннаКораблей[j])
                    if (НетКорабля(j))
                        return j;
            return -1;
        }

        public void ПоставитьКорабль(int номер, Точка[] палуба)
        {
            if (корабль[номер] != null)
                УбратьКорабль(номер);
            корабль[номер] = new Корабль(палуба);
            foreach (Точка t in палуба)
            {
                картаКораблей[t.x, t.y] = номер;
                showShip(t, номер);
            }
            создано++;
        }

        public void УбратьКорабль(int номер)
        {
            foreach (Точка t in корабль[номер].палуба)
            {
                картаКораблей[t.x, t.y] = -1;
                showShip(t, -1);
            }
            корабль[номер] = null;
            создано--;
        }

        public bool НетКорабля(int номер)
        {
            return корабль[номер] == null;
        }

        public int КартаКораблей(Точка t)
        {
            if (НаМоре(t))
                return картаКораблей[t.x, t.y];
            return -1;
        }

        public void ОчиститьТочку(Точка t)
        {
            if (!НаМоре(t)) return;
            if (картаКораблей[t.x, t.y] == -1) return;
            УбратьКорабль(картаКораблей[t.x, t.y]);
        }

        void ОчиститьОблисть(Точка t)
        {
            Точка p;
            for (p.x = t.x - 1; p.x <= t.x + 1; p.x++)
                for (p.y = t.y - 1; p.y <= t.y + 1; p.y++)
                    ОчиститьТочку(p);
        }

        public void ПоставитьСлучайно()
        {
            Сброс();
            int loop = 100;
            while (loop-- > 0 && создано < всегоКораблей)
            {
                for (int nr = 0; nr < всегоКораблей; nr++)
                    if (НетКорабля(nr))
                        ПоставитьСлучайно(nr);
            }
            if (создано < всегоКораблей)
                Сброс();
        }

    }
}
